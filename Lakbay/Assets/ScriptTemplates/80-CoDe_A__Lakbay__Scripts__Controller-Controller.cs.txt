/*
 * Date Created: #DATE#
 * Author: #AUTHOR#
 * 
 * Copyright Â© #YEAR# #DEVELOPER_NAME#. All Rights Reserved.
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

using NaughtyAttributes;
using TMPro;
using YamlDotNet.Serialization;

using #NAMESPACE#.Utilities;

namespace #RELATIVE_NAMESPACE# {
    public interface I#SCRIPTNAME# : Core.Base.IController, ISerializable {
        new Data data { get; set; }

    }

    public class #SCRIPTNAME# : Core.Base.Controller, I#SCRIPTNAME# {
        public new const string BoxGroupName = "#RELATIVE_NAMESPACE#.#SCRIPTNAME#";

        Data I#SCRIPTNAME#.data {
            get => new Data(this);
            set {
                value ??= new Data();
                (this as Core.Base.IController).data = value;

            }

        }


        public #SCRIPTNAME#() : base() {
            var self = this as IController;
            self.data = null;

        }

        public override void OnInspectorHasUpdate() {
            var self = this as IController;
            base.OnInspectorHasUpdate();

        }

        public override void SetData(TextAsset textAsset) {
            var self = this as IController;
            self.data = new Data(textAsset);
            
        }

    }

}